---
# file: roles/common/tasks/home.yml
- name: Set up home directory structure
  file:
    state: directory
    path: "{{ item.name }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    setype: "{{ item.context }}"
    mode: "{{ item.mode }}"
  with_items:
      - { name: "{{ homedir }}", mode: '0710', context: user_home_dir_t }
      - { name: "{{ homedir }}/bin", mode: '0755', context: home_bin_t }
      - { name: "{{ homedir }}/doc", mode: '0755', context: home_bin_t }
      - { name: "{{ homedir }}/downloads", mode: '0755', context: home_bin_t }
      - { name: "{{ homedir }}/media", mode: '0755', context: user_home_t }
      - { name: "{{ homedir }}/media/music", mode: '0755', context: user_home_t }
      - { name: "{{ homedir }}/media/pictures", mode: '0755', context: user_home_t }
      - { name: "{{ homedir }}/media/templates", mode: '0755', context: user_home_t }
      - { name: "{{ homedir }}/media/videos", mode: '0755', context: user_home_t }
      - { name: "{{ homedir }}/.config", mode: '0755', context: config_home_t }
      - { name: "{{ homedir }}/.local", mode: '0700', context: gconf_home_t }
      - { name: "{{ homedir }}/.local/share", mode: '0700', context: data_home_t }
      - { name: "{{ homedir }}/.ssh", mode: '0700', context: ssh_home_t }
  become: no
  tags:
    - homedir

- name: Authorize my public SSH keys
  authorized_key:
    manage_dir: yes
    user: "{{ user }}"
    key: "{{ item }}"
  loop: "{{ ssh_public_keys }}"
  become: no
  tags:
    - homedir

- name: Add SSH known hosts keys
  known_hosts:
    name: "{{ item.key }}"
    key: "{{ item.value }}"
    state: present
  loop: "{{ ssh_known_hosts | dict2items }}"
  become: no
  tags:
    - configuration

- name: Set up dotfiles repository
  command: vcsh clone {{ github_clone_prefix }}/patrickmacarthur/dotfiles.git dotfiles
  args:
    creates: "{{ homedir }}/.config/vcsh/repo.d/dotfiles.git"
  become: no
  notify:
    - Update XDG user directories
  tags:
    - homedir

- name: Checkout all enabled repositories
  command: mr checkout
  environment:
    XDG_CONFIG_HOME: "{{ homedir }}/.config"
  become: no
  changed_when: "mr_checkout.stdout is search('mr checkout: finished \\(.*\\d+ ok')"
  register: mr_checkout
  tags:
    - homedir
